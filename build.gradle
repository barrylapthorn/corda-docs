apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'net.corda.plugins.cordformation'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url 'http://oss.sonatype.org/content/repositories/snapshots'
    }
    maven {
        url 'https://dl.bintray.com/kotlin/exposed'
    }
}

sourceSets {
    main {
        resources {
            srcDir "../../../config/dev"
        }
    }
}

dependencies {
    compile project(':core')
    compile project(':client')

    compile "org.graphstream:gs-core:1.3"
    compile("org.graphstream:gs-ui:1.3") {
        exclude group: "bouncycastle"
    }

    runtime "net.corda:corda:$corda_version"
}

task getClientRpcTutorial(type: CreateStartScripts) {
    dependsOn(classes)
    mainClassName = "net.corda.docs.ClientRpcTutorialKt"
    applicationName = "client-rpc-tutorial"
    defaultJvmOpts = []
    outputDir = new File(project.buildDir, 'scripts')
    classpath = jar.outputs.files + project.configurations.runtime
}

applicationDistribution.into("bin") {
    from(getClientRpcTutorial)
    fileMode = 0755
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: [':install', 'build']) {
    directory "./build/nodes"
    networkMap "Notary"
    node {
        name "Notary"
        dirName "notary"
        nearestCity "London"
        advertisedServices = ["corda.notary.validating"]
        artemisPort 10002
        webPort 10003
        cordapps = []
    }
    node {
        name "Alice"
        dirName "alice"
        nearestCity "London"
        advertisedServices = []
        artemisPort 10004
        webPort 10005
        cordapps = []
        rpcUsers = [
                ['user' : "user",
                 'password' : "password",
                 'permissions' : ["StartFlow.net.corda.flows.CashFlow"]]
        ]
    }
}